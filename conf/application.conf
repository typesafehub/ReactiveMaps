include "kryo"
include "pubsub"

# This is the main configuration file for the application.
# ~~~~~

# 14 means 2 ^^ 14 regions, ie 16 million
reactiveMaps.maxZoomDepth=14

reactiveMaps.maxSubscriptionRegions=6

reactiveMaps.clusterThreshold=16
reactiveMaps.clusterDimension=4

reactiveMaps.summaryInterval=5s
reactiveMaps.expiryInterval=30s
reactiveMaps.subscriberBatchInterval=2s

reactiveMaps.bots.enabled=true
reactiveMaps.bots.totalNumberOfBots=10000

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="]I;nuZEPTPGytF5U/970v=FAxlxl5SHqfos=]C??:lG>:d;i13LFWp8rc5a`]j2c"

# The application languages
# ~~~~~
application.langs="en"

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=INFO

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Akka configuration
akka {

  loglevel = INFO
  
  actor.provider = "akka.cluster.ClusterActorRefProvider"
  
  extensions = [
    "akka.contrib.pattern.DistributedPubSubExtension",
    "com.romix.akka.serialization.kryo.KryoSerializationExtension"
  ]

  remote.netty.tcp {
    hostname = "127.0.0.1"
    port = 2552
  }
  remote.log-frame-size-exceeding = 512b
  remote.system-message-ack-piggyback-timeout = 1s
  
  cluster {
    seed-nodes = ["akka.tcp://application@127.0.0.1:2552"]
    roles = ["frontend", "backend-region", "backend-summary"]
    auto-down = on
    failure-detector.acceptable-heartbeat-pause = 10 s
  }
  
  actor.deployment {
    /regionManagerClient/router {
      router = consistent-hashing
      nr-of-instances = 1000
      cluster {
        enabled = on
        routees-path = "/user/regionManager"
        allow-local-routees = on
        use-role = "backend-region"
      }
    }
    /regionManager/router {
      router = consistent-hashing
      nr-of-instances = 1000
      cluster {
        enabled = on
        routees-path = "/user/regionManager"
        allow-local-routees = on
        use-role = "backend-summary"
      }
    }
  }

}

